# Generated by Django 4.0.6 on 2022-08-07 18:46

import datetime
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Complain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('PLUMBING', 'Plumbing'), ('ELECTRICITY', 'Electricity'), ('ELECTRICAL APPLIANCES', 'Electrical Appliances'), ('CARPENTRY', 'Carpentary'), ('BRICKLAYING', 'Bricklaying')], default='PLUMBING', max_length=100)),
                ('subject', models.CharField(max_length=100)),
                ('complain_start_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('date_reported', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('desc', models.CharField(max_length=200)),
                ('is_attended', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default='NO', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Hostel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('ASO HOSTEL', 'Aso Hostel'), ('EL-SALEM HOSTEL', 'El-Salem Hostel'), ('UNIVERSITY HOSTEL', 'University Hostel')], max_length=100)),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=100)),
                ('block', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('H', 'H'), ('UMH', 'UMH'), ('UFH', 'UFH')], max_length=100)),
                ('room_no', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26)])),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('is_admin', models.BooleanField(default=False, verbose_name='Admin')),
                ('is_supervisor', models.BooleanField(default=False, verbose_name='Supervisor')),
                ('is_student', models.BooleanField(default=False, verbose_name='Student')),
                ('complaints', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='roomapp.complain')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('hostel', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='roomapp.hostel')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
